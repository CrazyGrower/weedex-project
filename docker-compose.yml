services:
  # Base de données PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: weedex-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: weedex
      POSTGRES_PASSWORD: weedex123
      POSTGRES_DB: weedex
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - weedex-network

  # Interface d'administration de la base de données
  adminer:
    image: adminer:latest
    container_name: weedex-adminer
    restart: unless-stopped
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    networks:
      - weedex-network

  # API Backend (AdonisJS)
  api:
    build:
      context: ./weedex-api
      dockerfile: Dockerfile
    container_name: weedex-api
    restart: unless-stopped
    volumes:
      - ./weedex-api:/app
      - /app/node_modules
    ports:
      - "3333:3333"
    environment:
      - HOST=0.0.0.0
      - PORT=3333
      - NODE_ENV=development
      - DB_CONNECTION=pg
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=weedex
      - DB_PASSWORD=weedex123
      - DB_DATABASE=weedex
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=
      - APP_KEY=your-secret-key-here
      - CORS_ORIGIN=http://localhost:8000
      - LOG_LEVEL=info
    depends_on:
      - postgres
      - redis
    networks:
      - weedex-network

  # Application Frontend (Vue.js)
  frontend:
    build:
      context: ./weedex-frontend
      dockerfile: Dockerfile
    container_name: weedex-frontend
    restart: unless-stopped
    volumes:
      - ./weedex-frontend:/app
      - /app/node_modules
    ports:
      - "8000:8000"
    environment:
      - VITE_API_URL=http://api:3333
    depends_on:
      - api
      - redis
    networks:
      - weedex-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - weedex-network

networks:
  weedex-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data: